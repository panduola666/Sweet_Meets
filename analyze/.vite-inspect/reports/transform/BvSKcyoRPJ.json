{
  "resolvedId": "C:/Users/pandu/OneDrive/桌面/相遇甜點/sweetMeets/node_modules/@popperjs/core/lib/modifiers/applyStyles.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};",
      "start": 1703087316539,
      "end": 1703087316801,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703087316801,
      "end": 1703087316801,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703087316801,
      "end": 1703087316801,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703087316801,
      "end": 1703087316801,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703087316801,
      "end": 1703087316801,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703087316801,
      "end": 1703087316801,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703087316801,
      "end": 1703087316801,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703087316801,
      "end": 1703087316801,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703087316801,
      "end": 1703087316801,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703087316801,
      "end": 1703087316802,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703087316802,
      "end": 1703087316802,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703087316802,
      "end": 1703087316802,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703087316802,
      "end": 1703087316802,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703087316802,
      "end": 1703087316802,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703087316802,
      "end": 1703087316802,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703087316802,
      "end": 1703087316802,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703087316802,
      "end": 1703087316802,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703087316802,
      "end": 1703087316802,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703087316802,
      "end": 1703087316802,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703087316802,
      "end": 1703087316802,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703087316802,
      "end": 1703087316803,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703087316803,
      "end": 1703087316803,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703087316804,
      "end": 1703087316804,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703087316804,
      "end": 1703087316804,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703087316804,
      "end": 1703087316804,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703087316804,
      "end": 1703087316804,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703087316804,
      "end": 1703087316804,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703087316804,
      "end": 1703087316804,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703087316804,
      "end": 1703087316804,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703087316804,
      "end": 1703087316804,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703087316804,
      "end": 1703087316804,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703087316804,
      "end": 1703087316804,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703087316804,
      "end": 1703087316804,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703087316804,
      "end": 1703087316804,
      "order": "normal"
    }
  ]
}
