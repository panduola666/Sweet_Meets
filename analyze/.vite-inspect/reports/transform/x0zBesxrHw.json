{
  "resolvedId": "C:/Users/pandu/OneDrive/桌面/相遇甜點/sweetMeets/node_modules/@popperjs/core/lib/modifiers/flip.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};",
      "start": 1703087316540,
      "end": 1703087316828,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703087316828,
      "end": 1703087316828,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703087316828,
      "end": 1703087316828,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703087316828,
      "end": 1703087316828,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703087316828,
      "end": 1703087316828,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703087316828,
      "end": 1703087316828,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703087316828,
      "end": 1703087316828,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703087316828,
      "end": 1703087316828,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703087316828,
      "end": 1703087316828,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703087316829,
      "end": 1703087316829,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703087316829,
      "end": 1703087316829,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703087316829,
      "end": 1703087316829,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703087316829,
      "end": 1703087316829,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703087316829,
      "end": 1703087316829,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703087316829,
      "end": 1703087316829,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703087316829,
      "end": 1703087316829,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703087316829,
      "end": 1703087316829,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703087316829,
      "end": 1703087316829,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703087316829,
      "end": 1703087316829,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703087316829,
      "end": 1703087316829,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703087316829,
      "end": 1703087316829,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703087316829,
      "end": 1703087316831,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703087316831,
      "end": 1703087316831,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703087316831,
      "end": 1703087316831,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703087316831,
      "end": 1703087316831,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703087316831,
      "end": 1703087316831,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703087316831,
      "end": 1703087316831,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703087316831,
      "end": 1703087316831,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703087316831,
      "end": 1703087316831,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703087316831,
      "end": 1703087316831,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703087316831,
      "end": 1703087316831,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703087316831,
      "end": 1703087316831,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703087316831,
      "end": 1703087316831,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703087316831,
      "end": 1703087316831,
      "order": "normal"
    }
  ]
}
