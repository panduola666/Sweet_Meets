{
  "resolvedId": "C:/Users/pandu/OneDrive/桌面/相遇甜點/sweetMeets/node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  var rect = getBoundingClientRect(element, false, strategy === 'fixed');\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary, strategy) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}",
      "start": 1703087316924,
      "end": 1703087317098,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703087317098,
      "end": 1703087317098,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703087317098,
      "end": 1703087317099,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703087317099,
      "end": 1703087317099,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703087317099,
      "end": 1703087317099,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703087317099,
      "end": 1703087317099,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703087317099,
      "end": 1703087317099,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703087317099,
      "end": 1703087317099,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703087317099,
      "end": 1703087317099,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703087317099,
      "end": 1703087317099,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703087317099,
      "end": 1703087317099,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703087317099,
      "end": 1703087317099,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703087317099,
      "end": 1703087317099,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703087317099,
      "end": 1703087317099,
      "order": "normal"
    }
  ]
}
